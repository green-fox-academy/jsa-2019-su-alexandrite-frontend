// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Popup /> should render properly and match the snapshot 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  onRequestClose={[MockFunction]}
  presentationStyle="overFullScreen"
  transparent={true}
  visible={false}
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,.3)",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "borderRadius": 6,
          "height": 280,
          "width": 285,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#4d63be",
            "borderTopRightRadius": 6,
            "borderTopStartRadius": 6,
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 13,
              "fontWeight": "bold",
              "padding": 15,
            }
          }
        >
          Title
        </Text>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "borderTopRightRadius": 6,
              "padding": 15,
            }
          }
        >
          <Text />
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "space-between",
            "padding": 15,
          }
        }
      >
        <Text>
          Test
        </Text>
        <View
          style={
            Object {
              "flexDirection": "column",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 2,
                  "height": 40,
                  "justifyContent": "center",
                  "width": 255,
                },
                Object {
                  "backgroundColor": "#5eceb1",
                },
                false,
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 14,
                }
              }
            >
              OK
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 2,
                "height": 40,
                "justifyContent": "center",
                "width": 255,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#666",
                }
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</Modal>
`;

exports[`<Popup /> should render properly and match the snapshot when confirm enabled 1`] = `
<Modal
  animationType="fade"
  hardwareAccelerated={false}
  onRequestClose={[MockFunction]}
  presentationStyle="overFullScreen"
  transparent={true}
  visible={false}
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0,0,0,.3)",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "borderRadius": 6,
          "height": 280,
          "width": 285,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#4d63be",
            "borderTopRightRadius": 6,
            "borderTopStartRadius": 6,
            "flexDirection": "row",
            "justifyContent": "space-between",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "white",
              "fontSize": 13,
              "fontWeight": "bold",
              "padding": 15,
            }
          }
        >
          Title
        </Text>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "borderTopRightRadius": 6,
              "padding": 15,
            }
          }
        >
          <Text />
        </View>
      </View>
      <View
        style={
          Object {
            "flex": 1,
            "justifyContent": "space-between",
            "padding": 15,
          }
        }
      >
        <Text>
          Test
        </Text>
        <View
          style={
            Object {
              "flexDirection": "column",
            }
          }
        >
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "borderRadius": 2,
                  "height": 40,
                  "justifyContent": "center",
                  "width": 255,
                },
                Object {
                  "backgroundColor": "#5eceb1",
                },
                Object {
                  "opacity": 0.5,
                },
              ]
            }
          >
            <Text
              style={
                Object {
                  "color": "#fff",
                  "fontSize": 14,
                }
              }
            >
              OK
            </Text>
          </View>
          <View
            accessible={true}
            focusable={true}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "borderRadius": 2,
                "height": 40,
                "justifyContent": "center",
                "width": 255,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#666",
                }
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</Modal>
`;
